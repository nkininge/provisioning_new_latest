---
- name: install_libraries | check if zinc is installed
  command: "{{ tools_home }}/zinc/zinc-{{ zinc_version }}/bin/zinc -version"
  register: check_zinc
  ignore_errors: yes

- name: install_libraries | "set fact if zinc version is 0.3.9"
  set_fact: zinc_exists="true"
  when: check_zinc.rc == 0 and check_zinc.stdout.find('0.3.9') != -1

- name: install_libraries | skip zinc installation
  debug: msg="skipping zinc installation as it is already installed"
  when: zinc_exists is defined

- set_fact: zinc_base={{ zinc_url | basename }}
  when: zinc_exists is not defined

- set_fact: zinc_base_dir={{ zinc_base | regex_replace('\.tgz','') }}
  when: zinc_exists is not defined

- set_fact: zinc_base_dir={{ zinc_base | regex_replace('\.tgz','') }}
  when: zinc_base_dir is not defined and zinc_exists is not defined

- name: install_zinc | Create zinc directory
  file: path={{ tools_home }}/zinc state=directory owner="{{ build_user }}"
  become: yes
  become_user: "{{ build_user }}"
  when: zinc_exists is not defined

- name: install_zinc | Download zinc
  get_url: url={{ zinc_url }} dest=/tmp/{{ zinc_base }} timeout=120
  become: yes
  become_user: "{{ build_user }}"
  when: zinc_exists is not defined

- name: install_zinc | untar zinc
  become: yes
  become_user: "{{ build_user }}"
  unarchive: copy=no src=/tmp/{{ zinc_base }} dest={{ tools_home }}/zinc/
  when: zinc_exists is not defined

- name: install_zinc | Symlink zinc-<version> -> latest
  become: yes
  become_user: "{{ build_user }}"
  file: src={{ tools_home }}/zinc/zinc-{{ zinc_version }} dest={{ tools_home }}/zinc/latest state=link
  when: zinc_exists is not defined

- name: install_zinc | delete zinc.tgz from /tmp
  become: yes
  become_user: root
  file: path=/tmp/{{ zinc_base }} state=absent
  when: zinc_exists is not defined
