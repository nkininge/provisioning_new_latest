---
  - name: install_gcc | check if gcc is installed
    command: "cc -dumpversion"
    register: check_gcc
    ignore_errors: yes

  - set_fact: installed_gcc_version={{ check_gcc.stdout }}
    when: check_gcc.rc == 0

  - set_fact: installed_gcc_version=0
    when: check_gcc.rc != 0

   # check if "check_gcc" is defined and value is greater than to desired gcc version
  - name: install_gcc | "set fact if gcc version is {{ installed_gcc_version }} > {{gcc_version}}"
    set_fact: gcc_exists="true"
    when: check_gcc.rc == 0 and {{ installed_gcc_version | version_compare(gcc_version, '>') }}

  - name: install_gcc | skip gcc installation
    debug: msg="skipping gcc installation as it is already installed"
    when: gcc_exists is defined

  - set_fact: gcc_base=/tmp/{{ gcc_url | basename }}

  - set_fact: gcc_base_dir={{ gcc_base | regex_replace('\.tar\.gz','') }}
    when: gcc_base is defined

  - set_fact: install_base_dir={{tools_home}}/gcc

  - set_fact: install_dir={{install_base_dir}}/{{ gcc_version }}

  - set_fact: gcc_base={{install_base_dir}}/{{ gcc_url | basename }}

  - set_fact: gcc_base_dir={{ gcc_base | regex_replace('\.tar\.gz','') }}
    when: gcc_base is defined

  - set_fact: gcc_build_dir={{install_base_dir}}/objdir

  - name: install_gcc | Make gcc tools folder
    file: path={{ install_base_dir }} state=directory
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | download gcc
    get_url: url={{gcc_url}} dest={{ gcc_base }} mode=0770 timeout=120
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | untar gcc
    unarchive: copy=no src={{ gcc_base }} dest={{ install_base_dir }}
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | Make gcc build folder
    file: path={{ gcc_build_dir }} state=directory
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | GCC download_prerequisites
    shell: chdir={{ gcc_base_dir }}/ ./contrib/download_prerequisites
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | configure GCC
    shell: chdir={{gcc_build_dir}} {{ gcc_base_dir }}/configure --prefix={{install_dir}} --enable-languages=c,c++ --disable-multilib
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | make GCC
    shell: chdir={{gcc_build_dir}} make
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | install GCC
    shell: chdir={{gcc_build_dir}} make install
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | symlink for cc -> gcc
    file: chdir={{install_dir}}/bin src=gcc dest=cc state=link
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | Symlink <version> -> latest
    file: src={{ install_dir }} dest={{ tools_home }}/gcc/latest state=link
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: gcc_exists is not defined

  - name: install_gcc | delete gcc tarball from {{ gcc_base }}
    sudo: yes
    sudo_user: root
    file: path={{ gcc_base }} state=absent
    when: gcc_exists is not defined

  - name: install_gcc | delete gcc source directory from {{ gcc_base_dir }}
    sudo: yes
    sudo_user: root
    file: path={{ gcc_base_dir }} state=absent
    when: gcc_exists is not defined

  - name: install_gcc | delete gcc build directory from {{ gcc_build_dir }}
    sudo: yes
    sudo_user: root
    file: path={{ gcc_build_dir }} state=absent
    when: gcc_exists is not defined
