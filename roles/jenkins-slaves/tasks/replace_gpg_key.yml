---
  - include_vars: ../../common/vars/{{project}}_secrets.yml
    when: project != 'dev'

  - name: Replace gpg key | Pre clean up
    sudo: yes
    sudo_user: "{{ build_user }}"
    file: path={{ build_user_home }}/jenkins-gpg-keys{,.tar.gz,.tar.gz.gpg} state=absent
 
  - name: Replace gpg key | Download gpg keys
    sudo: yes
    sudo_user: "{{ build_user }}"
    get_url: url="{{ gpgkeys_nosec_url }}"
             dest="{{ build_user_home }}/jenkins-gpg-keys.tar.gz" force=yes timeout=120
 
  - name: Replace gpg key | Untar gpg keys archive
    sudo: yes
    sudo_user: "{{ build_user }}"
    unarchive: copy=no src={{build_user_home}}/jenkins-gpg-keys.tar.gz
        dest={{build_user_home}}/

  - name: Replace gpg key | delete gpg secret key
    sudo: yes
    sudo_user: "{{ build_user }}"
    shell: "gpg --batch --yes --delete-secret-key DF52ED4F7A3A5882C0994C66B9733A7A07513CAD; gpg --batch --yes --delete-key 07513CAD"
    ignore_errors: yes

  - name: Jenkins Slave Setup - Import gpg secret
    sudo: yes
    sudo_user: "{{ build_user }}"
    shell: "gpg --allow-secret-key-import --import {{build_user_home}}/jenkins-gpg-keys/jenkins_sec_no_passphrase.gpg"
    ignore_errors: yes

  - name: Replace gpg key | Post clean up
    sudo: yes
    sudo_user: "{{ build_user }}"
    file: path={{ build_user_home }}/jenkins-gpg-keys{,.tar.gz,.tar.gz.gpg} state=absent
