---
- name: install_wangle | check if wangle is installed
  stat:
    path: "{{ hbase_native_home }}/lib/libwangle.a"
  register: stat_result

- name: install_wangle | set fact false if wangle is not installed
  set_fact:
    wangle_exists: false
  when: stat_result.stat.exists == False

- name: install_wangle | set fact true if wangle is installed
  set_fact:
    wangle_exists: true
  when: stat_result.stat.exists == True

- name: install_wangle | skip wangle installation
  debug: msg="skipping wangle installation as it is already installed"
  when: wangle_exists

- name: install_wangle | download wangle
  get_url: url="{{wangle_url}}" dest=/tmp/{{ wangle_url | basename }} timeout=120
  when: not wangle_exists

- name: install_wangle | unarchive wangle tar.gz
  unarchive: src=/tmp/{{ wangle_url | basename }} dest=/tmp/ copy=no
  when: not wangle_exists

- name: install_wangle | install wangle from src
  shell: cmake . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX={{hbase_native_home}} -DBOOST_ROOT={{hbase_native_home}}; make; make install
  args:
   chdir: /tmp/wangle-{{wangle_version}}/wangle
  when: ((not wangle_exists) and (ansible_os_family != 'RedHat'))

- name: install_wangle | install wangle from src
  shell: scl enable devtoolset-6 "cmake . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX={{hbase_native_home}}; make; make install"
  args:
   chdir: /tmp/wangle-{{wangle_version}}/wangle
  when: ((not wangle_exists) and (ansible_os_family == 'RedHat'))

- name: install_wangle | rm /tmp/wangle-{{wangle_version}}
  become: yes
  become_user: root
  shell: rm -rf /tmp/wangle-{{wangle_version}}
  when: not wangle_exists

- name: install_wangle | rm /tmp/{{ wangle_url | basename }}
  become: yes
  become_user: root
  shell: rm -rf /tmp/{{ wangle_url | basename }}
  when: not wangle_exists
