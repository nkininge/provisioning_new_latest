---
  - set_fact: base_ssh_url="{{ readonly_ssh_url | basename }}"
  - set_fact: base_ssh_dir="{{ base_ssh_url.split('.')[0] }}"

  - name: setup_user | readonly ssh keys - Download
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: project != 'dev'
    get_url: url={{ readonly_ssh_url }} dest={{build_user_home}}/{{ base_ssh_url }} force=yes timeout=120

  - name: setup_user | readonly ssh keys - Download
    sudo: yes
    sudo_user: "{{ build_user }}"
    when: project == 'dev'
    copy: src={{ readonly_ssh_url }} dest={{build_user_home}}/{{ base_ssh_url }} owner={{ build_user }}  group={{ build_group }} mode=0644

  - name: setup_user | readonly ssh keys - untar
    sudo: yes
    sudo_user: "{{ build_user }}"
    unarchive: copy=no src={{build_user_home}}/{{ base_ssh_url }} dest={{build_user_home}}/

  - name: setup_user | delete ssh keys tarball
    sudo: yes
    sudo_user: "{{ build_user }}"
    file: path={{build_user_home}}/{{ base_ssh_url }} state=absent

  - name: setup_user | create ssh directory
    sudo: yes
    sudo_user: "{{ build_user }}"
    file: path="{{ build_user_home }}/.ssh" state=directory owner="{{ build_user }}" group="{{ build_group }}" mode=700

  - name: setup_user | check id_rsa file exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/id_rsa"
    register: id_rsa_stat_result

  - name: setup_user | ssh keys - id_rsa
    sudo: yes
    sudo_user: "{{ build_user }}"
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/id_rsa" dest="{{ build_user_home }}/.ssh/id_rsa" owner="{{ build_user }}" group="{{ build_group }}" mode=600
    when: id_rsa_stat_result.stat.exists == true

  - name: setup_user | check id_rsa.pub file exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/id_rsa.pub"
    register: id_rsa_pub_stat_result

  - name: setup_user | ssh keys - id_rsa.pub
    sudo: yes
    sudo_user: "{{ build_user }}"
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/id_rsa.pub" dest="{{ build_user_home }}/.ssh/id_rsa.pub" owner="{{ build_user }}" group="{{ build_group }}" mode=644
    when: id_rsa_pub_stat_result.stat.exists == true

  - name: setup_user | check id_dsa file exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/id_dsa"
    register: id_dsa_stat_result

  - name: setup_user | ssh keys - id_dsa
    sudo: yes
    sudo_user: "{{ build_user }}"
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/id_dsa" dest="{{ build_user_home }}/.ssh/id_dsa" owner="{{ build_user }}" group="{{ build_group }}" mode=600
    when: id_dsa_stat_result.stat.exists == true

  - name: setup_user | check id_dsa.pub file exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/id_dsa.pub"
    register: id_dsa_pub_stat_result

  - name: setup_user | ssh keys - id_dsa.pub
    sudo: yes
    sudo_user: "{{ build_user }}"
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/id_dsa.pub" dest="{{ build_user_home }}/.ssh/id_dsa.pub" owner="{{ build_user }}" group="{{ build_group }}" mode=644
    when: id_dsa_pub_stat_result.stat.exists == true

  - name: setup_user | check if "{{ build_user_home }}/{{ base_ssh_dir }}/authorized_keys" exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/authorized_keys"
    register: ssh_auth_keys_stat_result

  - name: setup_user | ssh keys - authorized_keys
    sudo: yes
    sudo_user: "{{ build_user }}"
    ignore_errors: yes
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/authorized_keys" dest="{{ build_user_home }}/.ssh/authorized_keys" owner="{{ build_user }}" group="{{ build_group }}" mode=600
    when: ssh_auth_keys_stat_result.stat.exists == true

  - name: setup_user | check if "{{ build_user_home }}/{{ base_ssh_dir }}/config" exists
    stat:
      path: "{{ build_user_home }}/{{ base_ssh_dir }}/config"
    register: ssh_config_stat_result

  - name: setup_user | ssh keys - config
    sudo: yes
    sudo_user: "{{ build_user }}"
    ignore_errors: yes
    copy: src="{{ build_user_home }}/{{ base_ssh_dir }}/config" dest="{{ build_user_home }}/.ssh/config" owner="{{ build_user }}" group="{{ build_group }}" mode=644
    when: ssh_config_stat_result.stat.exists == true

  - name: setup_user | copy hwx_secrets.conf file
    sudo: yes
    sudo_user: "{{ build_user }}"
    get_url: url={{non_jenkins_secrets_conf}} dest={{build_user_home}}/.ssh/{{ jenkins_secrets_conf | basename }} force=yes
             timeout=120 url_password={{ url_download_key }} url_username=releng owner="{{ build_user }}" group="{{ build_group }}" mode=644
    tags: secrets_conf
    when: project == 're'
