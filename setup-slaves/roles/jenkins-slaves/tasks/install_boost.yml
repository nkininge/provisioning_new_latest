---
- name: install_boost | check if boost is installed
  stat:
    path: "{{ hbase_native_home }}/lib/libboost_thread.so"
  register: stat_result

- name: install_boost | set fact false if boost is not installed
  set_fact:
    boost_exists: false
  when: stat_result.stat.exists == False

- name: install_boost | set fact true if boost is installed
  set_fact:
    boost_exists: true
  when: stat_result.stat.exists == True

- name: install_boost | skip boost installation
  debug: msg="skipping boost installation as it is already installed"
  when: boost_exists

- name: install_boost | download boost
  get_url: url="{{boost_url}}" dest=/tmp/{{ boost_url | basename }} timeout=120
  when: not boost_exists

- name: install_boost | unarchive boost tar.gz
  unarchive: src=/tmp/{{ boost_url | basename }} dest=/tmp/ copy=no
  when: not boost_exists

- name: install_boost | install boost from src
  shell: ./bootstrap.sh --prefix={{hbase_native_home}} --with-libraries=all; ./b2 install --prefix={{hbase_native_home}}
  args:
   chdir: /tmp/boost_1_61_0
  when: not boost_exists and ansible_os_family != 'RedHat'

- name: install_boost | install boost from src
  shell: scl enable devtoolset-6 "./bootstrap.sh --prefix={{hbase_native_home}} --with-libraries=all; ./b2 install --prefix={{hbase_native_home}}"
  args:
   chdir: /tmp/boost_1_61_0
  when: not boost_exists and ansible_os_family == 'RedHat'

- name: install_boost | rm /tmp/boost_1_61_0
  become: yes
  become_user: root
  shell: rm -rf /tmp/boost_1_61_0
  when: not boost_exists

- name: install_boost | rm /tmp/{{ boost_url | basename }}
  become: yes
  become_user: root
  shell: rm -rf /tmp/{{ boost_url | basename }}
  when: not boost_exists
