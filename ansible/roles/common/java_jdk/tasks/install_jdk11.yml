- name: install_jdk11 | "Check if jdk11 is installed"
    command: "{{jdk11_home}}/jdk-{{jdk11_version}}/bin/java -version"
    register: check_jdk11
    changed_when: False
    ignore_errors: yes

  # check if "check_jdk11" is defined and value is equal to desired jdk11 version
  - name: install_jdk11 | "set fact if jdk11 version is {{jdk11_version}}"
    set_fact: jdk11_exists="true"
    when: check_jdk11.rc == 0 and check_jdk11.stderr.find(jdk11_version) != -1

  - name: install_jdk11 | "Skip jdk11 installation"
    debug: msg="skip jdk11 installation as it is already installed"
    when: jdk11_exists is defined

  - name: install_jdk11 | "Download Jdk11"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{jdk11_url}} dest={{jdk11_home}}/{{ jdk11_url | basename }} mode=744 timeout=120
    when: jdk11_exists is not defined

  - name: install_jdk11 | "Install Jdk11"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk11_home}}/{{ jdk11_url | basename }} dest={{jdk11_home}}
    when: jdk11_exists is not defined

  - name: install_jdk11 | "Install JCE Policy files for JDK11"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url="http://s3.amazonaws.com/dev.hortonworks.com/REJENKINS/UnlimitedJCEPolicyJDK8.zip" dest={{jdk11_home}}/UnlimitedJCEPolicyJDK8.zip mode=744 timeout=120

  - name: install_jdk11 | "Symlink jdk11 -> latest"
    become: yes
    become_user: "{{ build_user }}"
    file: src="jdk-{{jdk11_version}}" dest={{jdk11_home}}/latest state=link
    when: jdk11_exists is not defined

  - name: install_jdk11 | "Unzip JCE Policy files"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk11_home}}/UnlimitedJCEPolicyJDK8.zip dest={{jdk11_home}}

  - name: install_jdk11 | "Create lib/security for jdk11"
    become: yes
    become_user: "{{ build_user }}"
    file: path={{ jdk11_home }}/jdk-{{jdk11_version}}/lib/security state=directory

  - name: install_jdk11 | "Install UnlimitedJCEPolicyJDK8"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk11_home}}/UnlimitedJCEPolicyJDK8.zip dest={{jdk11_home}}/

  - name: install_jdk11 | "Copy JCE Policy files for JDK8"
    become: yes
    become_user: "{{ build_user }}"
    shell: cp -r {{jdk11_home}}/UnlimitedJCEPolicyJDK/*.jar {{jdk11_home}}/jdk-{{jdk11_version}}/lib/security/

  - name: install_jdk11 | delete jdk tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{jdk11_home}}/{{ jdk11_url | basename }} state=absent
    when: jdk11_exists is not defined

  - name: install_jdk11 | delete JCE Policy files tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{jdk11_home}}/UnlimitedJCEPolicyJDK8.zip state=absent
