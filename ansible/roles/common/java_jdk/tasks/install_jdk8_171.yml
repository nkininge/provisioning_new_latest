---
  - name: install_jdk8_171 | "Check if jdk8_171 is installed"
    command: "{{jdk.jdk8_171_home}}/jdk{{jdk_version.jdk8_171_version}}/bin/java -version"
    register: check_jdk8_171
    changed_when: False
    ignore_errors: yes

  # check if "check_jdk8_171" is defined and value is equal to desired jdk8_171 version
  - name: install_jdk8_171 | "set fact if jdk8_171 version is {{jdk_version.jdk8_171_version}}"
    set_fact: jdk8_171_exists="true"
    when: check_jdk8_171.rc == 0 and check_jdk8_171.stderr.find(jdk_version.jdk8_171_version) != -1

  - name: install_jdk8_171 | "Skip jdk8_171 installation"
    debug: msg="skip jdk8_171 installation as it is already installed"
    when: jdk8_171_exists is defined

  - name: install_jdk8_171 | "Download Jdk8_171"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{jdk8_171_url}} dest={{jdk.jdk8_171_home}}/{{ jdk8_171_url | basename }} mode=744 timeout=120
    when: jdk8_171_exists is not defined

  - name: install_jdk8_171 | "Install Jdk8_171"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk.jdk8_171_home}}/{{ jdk8_171_url | basename }} dest={{jdk.jdk8_171_home}}
    when: jdk8_171_exists is not defined

  - name: install_jdk8_171 | "Install JCE Policy files for JDK8_171"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url="http://s3.amazonaws.com/dev.hortonworks.com/REJENKINS/UnlimitedJCEPolicyJDK8.zip" dest={{jdk.jdk8_171_home}}/UnlimitedJCEPolicyJDK8.zip mode=744 timeout=120

  - name: install_jdk8_171 | "Unzip JCE Policy files"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk.jdk8_171_home}}/UnlimitedJCEPolicyJDK8.zip dest={{jdk.jdk8_171_home}}

  - name: install_jdk8_171 | "Create lib/security for jdk8_171"
    become: yes
    become_user: "{{ build_user }}"
    file: path={{ jdk.jdk8_171_home }}/jdk{{jdk_version.jdk8_171_version}}/lib/security state=directory

  - name: install_jdk8_171 | "Install UnlimitedJCEPolicyJDK8"
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{jdk.jdk8_171_home}}/UnlimitedJCEPolicyJDK8.zip dest={{jdk.jdk8_171_home}}/

  - name: install_jdk8_171 | "Copy JCE Policy files for JDK8_171"
    become: yes
    become_user: "{{ build_user }}"
    shell: cp -r {{jdk.jdk8_171_home}}/UnlimitedJCEPolicyJDK/*.jar {{jdk.jdk8_171_home}}/jdk{{jdk_version.jdk8_171_version}}/lib/security/

  - name: install_jdk8_171 | delete jdk tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{jdk.jdk8_171_home}}/{{ jdk8_171_url | basename }} state=absent
    when: jdk8_171_exists is not defined

  - name: install_jdk8_171 | delete JCE Policy files tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{jdk.jdk8_171_home}}/UnlimitedJCEPolicyJDK8.zip state=absent
