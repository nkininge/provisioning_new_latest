---
  - include_vars: "{{ secret_profile_file }}"
    tags: new_nexus_settings

  - include_vars: ./../../config/group_vars/dev_secrets.yml
    when: project == "re" and build_user == "nobody"

  - name: "Update limits.conf"
    become: yes
    become_user: root
    copy: src=limits.conf dest=/etc/security/limits.conf

  - name: "Copy env file"
    become: yes
    become_user: "{{ build_user }}"
    copy: src=jenkins_env.sh dest={{tools_home}}/env.sh mode=755

  - name: "rm s3cfg"
    become: yes
    become_user: "{{ build_user }}"
    shell: rm -rf {{build_user_home}}/.s3cfg
    tags: s3cmd_config

  - name: "setup s3cfg"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{s3cfg_url}} dest={{build_user_home}}/.s3cfg mode=744 force=yes
             timeout=120  url_password={{ url_download_key }} url_username=releng
    tags: s3cmd_config

  - name: check if nobody user and use nobody_settings_url
    set_fact: settings_url="{{nobody_settings_url}}"
    when: project == "re" and build_user == "nobody"

  - name: "setup ./m2 settings.xml"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{settings_url}} dest={{build_user_home}}/.m2/settings.xml timeout=120
             mode=744 force=yes url_password={{ url_download_key }} url_username=releng
    tags: nexus_settings

  - name: "setup ./gradle/gradle.properties"
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{gradle_properties_url}} dest={{build_user_home}}/.gradle/gradle.properties timeout=120
             mode=744 force=yes url_password={{ url_download_key }} url_username=releng
    tags: gradle_properties

  - name: "setup ./gradle/gradle.properites | update gradle.properties if user is not jenkins"
    shell: sed -i "s;0\/jenkins;0\/{{ build_user }};" "{{ build_user_home }}/.gradle/gradle.properties"
    become: yes
    become_user: "{{ build_user }}"
    tags: gradle_properties

  - name: "copy hw-caching-proxy.sh file"
    become: yes
    become_user: root
    copy: src="hw-caching-proxy.sh" dest="/etc/profile.d/hw-caching-proxy.sh" force=yes
    tags: update_caching_proxy

  - name: setup_user | copy hwx_secrets.conf file
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{non_jenkins_secrets_conf}} dest={{build_user_home}}/.ssh/{{ jenkins_secrets_conf | basename }}
             force=yes timeout=120 url_password={{ url_download_key }} url_username=releng
    tags: secrets_conf

  - name: setup_user_configs | Download gpg keys
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{ devci_gpgkeys_url }} url_password={{ url_download_key }} url_username=releng
            dest={{ build_user_home }}/{{ gpgkeys_url | basename }} timeout=120

  - name: setup_user_configs | Untar gpg keys archive
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{build_user_home}}/{{ gpgkeys_url | basename }}
        dest={{build_user_home}}/

  - name: setup_user_configs | delete gpg keys tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{build_user_home}}/{{ devci_gpgkeys_url }} state=absent

  - name: setup_user_configs | delete gpg secret and key
    become: yes
    become_user: "{{ build_user }}"
    shell: "gpg --batch --yes --delete-secret-and-public-key DF52ED4F7A3A5882C0994C66B9733A7A07513CAD"
    ignore_errors: yes

  - name: setup_user_configs | Import gpg pub
    become: yes
    become_user: "{{ build_user }}"
    shell: "gpg --import {{build_user_home}}/devci-gpg-keys/devci_pub.gpg"
    ignore_errors: yes

  - name: setup_user_configs | Import gpg secret
    become: yes
    become_user: "{{ build_user }}"
    shell: "gpg --allow-secret-key-import --import {{build_user_home}}/devci-gpg-keys/devci_sec.gpg"
    ignore_errors: yes
