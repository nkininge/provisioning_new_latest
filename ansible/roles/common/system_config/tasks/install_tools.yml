---
  - name: install_tools | Download Eclipse
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{eclipse_url}} dest={{tools_home}}/eclipse.tar.gz mode=0744 timeout=120
    tags: install_eclipse

  - name: install_tools | Untar Eclipse
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{tools_home}}/eclipse.tar.gz dest={{tools_home}}/
    tags: install_eclipse

  - name: install_tools | delete eclipse tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{tools_home}}/eclipse.tar.gz state=absent
    tags: install_eclipse

  - name: install_tools | Download Xerces
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{xerces_url}} dest={{tools_home}}/xerces.tar.gz mode=0744 timeout=120
    tags: install_xerces

  - name: install_tools | Untar Xerces
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{tools_home}}/xerces.tar.gz dest={{tools_home}}/
    tags: install_xerces

  - name: install_tools | delete xerces tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{tools_home}}/xerces.tar.gz state=absent
    tags: install_xerces

  - name: install_tools | Download Forrest
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{forrest_url}} dest={{forrest_home}}/forrest.tar.gz mode=744 timeout=120
    tags: install_forrest

  - name: install_tools | Download Forrest dependency
    become: yes
    become_user: "{{ build_user }}"
    get_url: url={{forrest_dependency_url}} dest={{forrest_home}}/forrest_dependency.tar.gz mode=744 timeout=120
    tags: install_forrest

  - name: install_tools | Untar Forrest
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{forrest_home}}/forrest.tar.gz dest={{tools_home}}/forrest
    tags: install_forrest

  - name: install_tools | Untar Forrest dependency
    become: yes
    become_user: "{{ build_user }}"
    unarchive: copy=no src={{forrest_home}}/forrest_dependency.tar.gz dest={{tools_home}}/forrest
    tags: install_forrest

  - name: install_tools | delete forrest tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{forrest_home}}/forrest.tar.gz state=absent
    tags: install_forrest

  - name: install_tools | delete forrest dependency tarball
    become: yes
    become_user: "{{ build_user }}"
    file: path={{forrest_home}}/forrest_dependency.tar.gz state=absent
    tags: install_forrest

  - name: install_tools | symlink Forrest -> latest
    become: yes
    become_user: "{{ build_user }}"
    file: src=apache-forrest-{{forrest_version}} dest={{forrest_home}}/latest state=link
    tags: install_forrest

  - stat: path={{forrest_home}}/apache-forrest-{{forrest_version}}/tools/ant
    register: link_status

  - name: install_tools | symlink Forrest - ant -> latest
    become: yes
    become_user: "{{ build_user }}"
    file: src={{tools_home}}/ant/latest dest={{forrest_home}}/apache-forrest-{{forrest_version}}/tools/ant state=link
    when: link_status.stat.exists is not defined
    tags: install_forrest

  - name: install_tools | Creating tools utils dir
    become: yes
    become_user: "{{ build_user }}"
    file: path={{tool_utils}} state=directory mode=0755
    tags: install_generate_256sha

  - name: install_tools | generating sha256 file
    become: yes
    become_user: "{{ build_user }}"
    copy: src={{ docker_home_group_vars }}/generate_256sha.sh dest={{tool_utils}} mode=0755
    tags: install_generate_256sha
